Uber Hypermedia
===============
:author: Mike Amundsen
:email: mca@amundsen.com

== Description
Uber Hypermedia is a read/write hypermedia type designed to support simple state transfers and ad-hoc hypermedia-based transitions. The base format is XML and there is a JSON variant, too.

Author::
  {author} ({email})
Dates::
  2014-02-07
Status::
  Working Draft
  
== General Concepts
+++[TK text goes here]+++

=== Uber Hypermedia Example
Below is an example of Uber in XML:

+++[TK just a rough draft - nothing final yet]+++

.XMl Example
----
<uber version="1.0">
  <data rel="self" url="http://example.org/" />
  <data rel="profile" url="http://example.org/profiles/people-and-places/" />
    
  <data id="people" rel="collection" url="http://example.org/people/">
    <data name="create" 
      rel="http://example.org/people/create" 
      url="http://example.org/people/" 
      model="g={givenName}&f={familyName}&e={email}"
      action="append" />
    <data name="search" 
      rel="search" 
      url="http://example.org/search" 
      model="g={givenName}&f={familyName}&e={email}" />
    <data name="person" rel="item" url="http://example.org/people/1">
      <data name="givenName">Mildred</data>
      <data name="familyName">Amundsen</data>
      <data name="email">mildred@example.org</data>
    </data>
    <data name="person" rel="item" url="http://example.org/people/2">
      <data name="givenName">Mildred</data>
      <data name="familyName">Amundsen</data>
      <data name="email">mildred@example.org</data>
    </data>
  </data>
  
  <data id="places" rel="collection" url="http://example.org/places/">
    <data name="search" rel="search" 
      url="http://example.org/search" 
      model="r={addressRegion}&l={addressLocality}&p={postalCode}" />
    <data name="place" url="http://example.org/places/1">
      <data name="name">Home</data>
      <data name="address">
        <data name="streetAddress">123 Main</data>
        <data name="addressLocality">Byteville</data>
        <data name="addressRegion">MD</data>
        <data name="postalCode">12345</data>
      </data>
    </data>
    <data name="place" url="http://example.org/places/2">
      <data name="name">Work</data>
      <data name="address">
        <data name="streetAddress">456 Grand Ave.</data>
        <data name="addressLocality">Byteville</data>
        <data name="addressRegion">MD</data>
        <data name="postalCode">12345</data>
      </data>
    </data>
  </data>
  
</uber>
----

.Uber JSON Example
----
{ 
  "uber" :
  {
    "version" : " 1.0",
    "data" :
    [
      {"rel" : "self", "url" : "http://example.org/"},
      {"rel" : "profile", "url" : "http://example.org/profiles/people-and-places"},
      "data" : 
      [
        {"id" : "people", "rel" : "collection", "url" : "http://example.org/people/"},
        "data" : 
        [
          {
            "name" : "create", 
            "rel" : "http://example.org/rels/create", 
            "url" : "http://example.org/people/",
            "model" : "g={givenName}&f={familyName}&e={email}",
            "action" : "append"
          },
          {
            "name" : "search",
            "rel" : "search",
            "url" : "http://example.org/people/search",
            "model" : "g={givenName}&f={familyName}&e={email}"
          },
          {
            "name" : "person",
            "rel" : "item",
            "url" : "http://example.org/people/1",
            "data" :
            [
              {"name" : "givenName", "value" : "Mike"},
              {"name" : "familyName", "value" : "Amundsen"},
              {"name" : "email", "value" : "mike@example.org"}
            ]
          },
          {
            "name" : "person",
            "rel" : "item",
            "url" : "http://example.org/people/2",
            "data" :
            [
              {"name" : "givenName", "value" : "Mildred"},
              {"name" : "familyName", "value" : "Amundsen"},
              {"name" : "email", "value" : "mildred@example.org"}
            ]
          }
        ],
        {"id" : "places", "rel" : "collection", "url" : "http://example.org/places/"},
        "data" :
        [
          {
            "name" : "search",
            "rel" : "search",
            "url" : "http://example.org/places/search",
            "model" : "r={addressRegion}&l={addressLocality}&p={postalCode}"
          },
          {
            "name" : "place",
            "rel" : "item",
            "url" : "http://example.org/places/a",
            "data" : 
            [
              {"name" : "name", "value" : "Home"},
              "data" :
              [
                {"name" : "streetAddress", "value" : "123 Main Street"},
                {"name" : "addressLocalitly", "value" : "Byteville"},
                {"name" : "addressRegion", "value" : "MD"},
                {"name" : "postalCode", "value" : "12345"}
              ]
            ]
          },
          {
            "name" : "place",
            "rel" : "item",
            "url" : "http://example.org/places/b",
            "data" : 
            [
              {"name" : "name", "value" : "Work"},
              "data" : 
              [
                {"name" : "streetAddress", "value" : "1456 Grand Ave."},
                {"name" : "addressLocalitly", "value" : "Byteville"},
                {"name" : "addressRegion", "value" : "MD"},
                {"name" : "postalCode", "value" : "12345"}
              ]
            ]
          }
        ]
      ]
    ]
  }
}
----

== The Uber Hypermedia Model
+++[TK text goes here]+++

== Elements
There are only three elements in the Uber Hypermedia message:

+<uber>+::
  The root element of all Uber Hypermedia messages
+<data>+::
  The main element in Uber Hypermedia messages. 
+<error>+::
  The element that carries error details from the previous request.

  
=== The +<uber>+ Element
This is the root element of a Uber Hypermedia message. Every Uber message MUST have this as it's root. It has one optional attribute: +version+ which carries the Uber message version information. For this release, all Uber messages SHOULD be set to the value of "1.0". If the +version+ attribute is missing, then it can be assumed to be set to "1.0".
  
=== The +<data>+ Element
The +<data>+ element is the main element in the message. It MUST appear as a child of the +<uber>+ element and MAY be nested as many times as needed. The +<data>+ element has the following attributes:

+id+::
  The globally unique identifier for this element.
+name+::
  A non-unique identifer for this element (Similar to +HTML.INPUT@name+).
+rel+::
  Contains a space-separated list of strings, each a link relation value.
+url+::
  A resolvable URL associated with this element.
+action+::
  The network request verb associated with this element.
+transclude+::
  Indicated whether the content that is returned from the URL should be embedded within the currently loaded document (+transclude="true"+) or treated as a 'navigation' to a new document (+transclude="false"+).
+model+::
  Contains a RFC6570-compliant +++[TK ref]+++ string to be used to construct URL query strings or request bodies (depending on the value in the +action+ attribute. 
+send-format+::
  Contains the media type identifier of the format to use when sending request bodies. This is an OPTIONAL element. If it is missing the setting should be assumed to be +application/x-www-urlencoded+ +++[TK ref]+++
+receive-format+::
  Contains the media type identifier of the format to expect when recieving request bodies. This is an OPTIONAL element. IF it is missing, ther setting should be assumed to be +application/vnf.uber-amundsen+xnl+.
+value+::
  In the XML variant of Uber Hypermedia, +innerText+ of the +<data>+ element contains the value associated with that element. In the JSON variant there is a +value+ attribute that contains the associated value.

=== The +<error>+ Element
The +<error>+ element contains any error information returned by the server regarding the previous request. The +<error>+ element has no attributes. This is an OPTIONAL element. When present, it SHOULD contain one or more +<data>+ child elements. It is the +<data>+ child elements that contains error details.

=== Comments
You can add comments to XML message bodies by enclosing the comment within +<!--+ and +-->+. 

== Extensibility
This document describes the Uber Hypermedia markup vocabulary. Markup from other vocabularies ("foreign markup") can be used in an Uber Hypermedia document. Any extensions to the Uber Hypermedia vocabulary MUST not redefine any objects (or their properties), arrays, properties, link relations, or data types defined in this document. Clients that do not recognize extensions to the Uber Hypermedia vocabulary SHOULD ignore them.

The details of designing and implementing Uber Hypermedia extensions is beyond the scope of this document.

[NOTE]
====
It is possible that future forward-compatible modifications to this specification will include new objects, arrays, properties, link-relations, and data types. Extension designers should take care to prevent future modifications from breaking or redefining those extensions.
====

== References 
+++[TK text goes here]+++

